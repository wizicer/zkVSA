---
import Layout from '../layouts/Layout.astro';
import WorkflowSVG from '../assets/workflow.svg';
import VerifyButton from '../components/VerifyButton.astro';
import { samples, type Sample } from '../data/samples.ts';
---

<Layout>
  <main class="min-h-screen bg-white">
    <!-- Title and Authors Section -->
    <section class="py-12">
      <div class="max-w-4xl mx-auto px-6 text-center">
        <h1 class="text-4xl font-bold text-gray-900 mb-6">
          ZK-VSA: Zero-Knowledge Voice Synthesis Anonymization
        </h1>
        <p class="text-lg text-gray-700">John Doe, Jane Smith, Bob Johnson</p>
      </div>
    </section>

    <!-- Abstract Section -->
    <section class="py-8">
      <div class="max-w-4xl mx-auto px-6">
        <h2 class="text-2xl font-semibold text-gray-800 mb-4">Abstract</h2>
        <p class="text-gray-700 leading-relaxed">
          This paper presents <strong>ZK-VSA</strong>, a novel approach to voice synthesis anonymization using zero-knowledge proofs. 
          Our system enables the generation of anonymized speech while maintaining privacy guarantees through 
          cryptographic proofs. The proposed method demonstrates significant improvements in both privacy preservation 
          and computational efficiency compared to existing approaches. We evaluate our system on multiple datasets 
          and show that it achieves state-of-the-art performance in voice anonymization tasks.
        </p>
      </div>
    </section>

    <!-- System Model Section -->
    <section class="py-8">
      <div class="max-w-4xl mx-auto px-6">
        <h2 class="text-2xl font-semibold text-gray-800 mb-6">System Model</h2>
          <div class="flex justify-center">
            <WorkflowSVG class="max-w-full h-auto" />
          </div>
        <p class="text-gray-700 leading-relaxed">
          The system model illustrates our proposed ZK-VSA architecture, which consists of three main components: 
          the voice anonymization module, the zero-knowledge proof generation system, and the verification framework. 
          The anonymization module processes input speech using multiple algorithms (f32, m32, m377) across different 
          semitone variations, while the proof system generates cryptographic proofs to ensure the integrity and 
          privacy of the anonymization process. The verification framework allows users to verify the authenticity 
          of anonymized speech without revealing the original content or the anonymization parameters.
        </p>
      </div>
    </section>

    <!-- Samples Section -->
    <section class="py-8">
      <div class="max-w-7xl mx-auto px-6">
        <h2 class="text-2xl font-semibold text-gray-800 mb-6">Samples</h2>
        <div class="overflow-x-auto">
          <table class="w-full border-collapse">
            <thead>
              <tr class="bg-gray-100 border-b border-gray-300">
                <th rowspan="2" class="px-4 py-3 text-left font-semibold text-gray-800">Transcript</th>
                <th rowspan="2" class="px-4 py-3 text-center font-semibold text-gray-800">Original Speech</th>
                <th rowspan="2" class="px-4 py-3 text-center font-semibold text-gray-800">Semitone</th>
                <th colspan="3" class="px-4 py-3 text-center font-semibold text-gray-800">Anonymized Speech</th>
                <th rowspan="2" class="px-4 py-3 text-center font-semibold text-gray-800">Proof (m377)</th>
              </tr>
              <tr class="bg-gray-100 border-b border-gray-300">
                <th class="px-2 py-2 text-center font-medium text-gray-700">f32</th>
                <th class="px-2 py-2 text-center font-medium text-gray-700">m32</th>
                <th class="px-2 py-2 text-center font-medium text-gray-700">m377</th>
              </tr>
            </thead>
            <tbody>
              {samples.map((sample: Sample, sampleIndex: number) => (
                (["3", "2", "1", "-1", "-2", "-3"] as const).map((semitone, semitoneIndex: number) => (
                  <tr class="hover:bg-gray-50 border-b border-gray-200">
                    {semitoneIndex === 0 && (
                      <td rowspan="6" class="px-4 py-3 text-sm text-gray-700 max-w-xs">
                        {sample.transcript}
                      </td>
                    )}
                    {semitoneIndex === 0 && (
                      <td rowspan="6" class="px-4 py-3 text-center">
                        <audio controls class="w-24 h-6">
                          <source src={`/audio/${sample.originalSpeech}`} type="audio/wav" />
                          Your browser does not support the audio element.
                        </audio>
                      </td>
                    )}
                    <td class="px-4 py-3 text-center font-medium text-gray-800">
                      {semitone}
                    </td>
                    <td class="px-2 py-3 text-center">
                      <audio controls class="w-24 h-6">
                        <source src={`/audio/${sample.anonymizedSpeech[semitone as keyof typeof sample.anonymizedSpeech].f32}`} type="audio/wav" />
                        Your browser does not support the audio element.
                      </audio>
                    </td>
                    <td class="px-2 py-3 text-center">
                      <audio controls class="w-24 h-6">
                        <source src={`/audio/${sample.anonymizedSpeech[semitone as keyof typeof sample.anonymizedSpeech].m32}`} type="audio/wav" />
                        Your browser does not support the audio element.
                      </audio>
                    </td>
                    <td class="px-2 py-3 text-center">
                      <audio controls class="w-24 h-6">
                        <source src={`/audio/${sample.anonymizedSpeech[semitone as keyof typeof sample.anonymizedSpeech].m377}`} type="audio/wav" />
                        Your browser does not support the audio element.
                      </audio>
                    </td>
                    <td class="px-4 py-3 text-center">
                      <VerifyButton 
                        proofId={`sample${sampleIndex + 1}_${semitone}_m377`}
                        downloadUrl={`/proofs/sample${sampleIndex + 1}_${semitone}_m377_proof.bin`}
                        fileSize={sample.proof[semitone as keyof typeof sample.proof].size}
                      />
                    </td>
                  </tr>
                ))
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  /* Audio control styles as specified in appendix */
  audio {
    width: 100px;
    height: 20px;
  }
</style>

